import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.e0a6002e.js";const h=JSON.parse('{"title":"attach - arguments","description":"","frontmatter":{},"headers":[],"relativePath":"api/attach/arguments.md","filePath":"api/attach/arguments.md","lastUpdated":1694988560000}'),e={name:"api/attach/arguments.md"},l=p(`<h1 id="attach-arguments" tabindex="-1">attach - arguments <a class="header-anchor" href="#attach-arguments" aria-label="Permalink to &quot;attach - arguments&quot;">​</a></h1><p>Possible arguments that can be used in <code>attach</code> method.</p><h2 id="bar" tabindex="-1"><code>bar</code> <a class="header-anchor" href="#bar" aria-label="Permalink to &quot;\`bar\`&quot;">​</a></h2><p>General settings for scrollbar &quot;bar&quot; thickness and offset.</p><p><sup><sub><strong>Default value</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">bar</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">offset</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">offset</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">bar</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">offset</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">offset</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">bar</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  y?: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    width?: number;</span></span>
<span class="line"><span style="color:#E1E4E8;">    offset</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> [number, number];</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">  x</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    height?: number;</span></span>
<span class="line"><span style="color:#E1E4E8;">    offset</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> [number, number];</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">bar</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  y?: {</span></span>
<span class="line"><span style="color:#24292E;">    width?: number;</span></span>
<span class="line"><span style="color:#24292E;">    offset</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> [number, number];</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">  x</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    height?: number;</span></span>
<span class="line"><span style="color:#24292E;">    offset</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> [number, number];</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="classname" tabindex="-1"><code>className</code> <a class="header-anchor" href="#classname" aria-label="Permalink to &quot;\`className\`&quot;">​</a></h2><p>ClassName used to target HTMLElement that has <code>overflow: auto</code> on it, meaning is scrollable container.</p><p><sup><sub><strong>Default value</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">className</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;light-scrollbar&quot;</span><span style="color:#E1E4E8;">,</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">className</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;light-scrollbar&quot;</span><span style="color:#24292E;">,</span></span></code></pre></div><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">className</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> string;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">className</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> string;</span></span></code></pre></div><h2 id="disablefocusprevent" tabindex="-1"><code>disableFocusPrevent</code> <a class="header-anchor" href="#disablefocusprevent" aria-label="Permalink to &quot;\`disableFocusPrevent\`&quot;">​</a></h2><p>By default emitting focus event is disabled, means when scroll is initialized from this container no focus event will be emitted.</p><p><sup><sub><strong>Default value</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">disableFocusPrevent</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">disableFocusPrevent</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span></code></pre></div><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">disableFocusPrevent</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">disableFocusPrevent</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span></code></pre></div><h2 id="wrapperplacement" tabindex="-1"><code>wrapperPlacement</code> <a class="header-anchor" href="#wrapperplacement" aria-label="Permalink to &quot;\`wrapperPlacement\`&quot;">​</a></h2><p>In order to create custom scrollbar, at this moment only possible solution is to wrap scrollable container with wrapper. This plugin can create wrapper inside your container and switch node and its all classes/attrs/listeners from original container to inner child, or create outside wrapper.</p><p><sup><sub><strong>Default value</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">wrapperPlacement</span><span style="color:#E1E4E8;">: WrapperPlacement.inside,</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">wrapperPlacement</span><span style="color:#24292E;">: WrapperPlacement.inside,</span></span></code></pre></div><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">wrapperPlacement</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> WrapperPlacement;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">wrapperPlacement</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> WrapperPlacement;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WrapperPlacement</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;inside&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;inside&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;outside&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;outside&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WrapperPlacement</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;inside&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;inside&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;outside&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;outside&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="wrapperelement" tabindex="-1"><code>wrapperElement</code> <a class="header-anchor" href="#wrapperelement" aria-label="Permalink to &quot;\`wrapperElement\`&quot;">​</a></h2><p>There is possibility to create wrapper element from given HTMLElement passed via this parameter.</p><p><sup><sub><strong>Default value</strong></sub></sup></p><p><code>null</code></p><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">wrapperElement</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> HTMLElement;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">wrapperElement</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> HTMLElement;</span></span></code></pre></div><h2 id="showonhover" tabindex="-1"><code>showOnHover</code> <a class="header-anchor" href="#showonhover" aria-label="Permalink to &quot;\`showOnHover\`&quot;">​</a></h2><p>Scrollbars can be visible only when hover on container.</p><p><sup><sub><strong>Default value</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">showOnHover</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">showOnHover</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span></code></pre></div><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">showOnHover</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> number </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">showOnHover</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> number </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span></code></pre></div>`,39),o=[l];function t(c,r,i,E,y,d){return a(),n("div",null,o)}const b=s(e,[["render",t]]);export{h as __pageData,b as default};
