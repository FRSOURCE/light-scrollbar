import{_ as e,o as s,c as t,a}from"./app.7e080d49.js";const y=JSON.parse('{"title":"attach - returns","description":"","frontmatter":{},"headers":[{"level":2,"title":"innerElement","slug":"innerelement","link":"#innerelement","children":[]},{"level":2,"title":"outerElement","slug":"outerelement","link":"#outerelement","children":[]},{"level":2,"title":"detach","slug":"detach","link":"#detach","children":[]}],"relativePath":"api/attach/returns.md","lastUpdated":1670776315000}'),n={name:"api/attach/returns.md"},l=a('<h1 id="attach-returns" tabindex="-1">attach - returns <a class="header-anchor" href="#attach-returns" aria-hidden="true">#</a></h1><p>Possible return items that comes from <code>attach</code> method.</p><h2 id="innerelement" tabindex="-1"><code>innerElement</code> <a class="header-anchor" href="#innerelement" aria-hidden="true">#</a></h2><p>Inner element of wrapped scrollable container, see example output code in <a href="/light-scrollbar/examples/default.html">example after mount section</a></p><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">innerElement</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> HTMLElement</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="outerelement" tabindex="-1"><code>outerElement</code> <a class="header-anchor" href="#outerelement" aria-hidden="true">#</a></h2><p>Outer element of wrapped scrollable container, see example output code in <a href="/light-scrollbar/examples/default.html">example after mount section</a></p><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">outerElement</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> HTMLElement</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="detach" tabindex="-1"><code>detach</code> <a class="header-anchor" href="#detach" aria-hidden="true">#</a></h2><p>Method that can be used to destroy/detach light-scrollbar from your element</p><p><sup><sub><strong>Type</strong></sub></sup></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">detach</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span></span></code></pre></div>',14),o=[l];function r(p,c,d,i,h,u){return s(),t("div",null,o)}const C=e(n,[["render",r]]);export{y as __pageData,C as default};
