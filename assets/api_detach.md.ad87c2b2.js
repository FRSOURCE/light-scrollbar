import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.f8fdd0f6.js";const m=JSON.parse('{"title":"detach","description":"","frontmatter":{},"headers":[],"relativePath":"api/detach.md","filePath":"api/detach.md","lastUpdated":1693785979000}'),e={name:"api/detach.md"},o=l(`<h1 id="detach" tabindex="-1">detach <a class="header-anchor" href="#detach" aria-label="Permalink to &quot;detach&quot;">â€‹</a></h1><p>Method that is returned from initialized <code>attach</code> method. It can be used to unwrap scrollbar list in DOM and remove all handlers from elements.</p><p>e.g</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { attach, WrapperPlacement } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;light-scrollbar&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scrollbarContainerElement</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;.my-scrollbar&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">innerElement</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">outerElement</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">detach</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">attach</span><span style="color:#E1E4E8;">(scrollbarContainerElement, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    wrapperPlacement: WrapperPlacement.outside</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// remove/detach whole plugin from element on some action</span></span>
<span class="line"><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;.click-to-remove-plugin&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">detach</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { attach, WrapperPlacement } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;light-scrollbar&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scrollbarContainerElement</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;.my-scrollbar&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">innerElement</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">outerElement</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">detach</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">attach</span><span style="color:#24292E;">(scrollbarContainerElement, {</span></span>
<span class="line"><span style="color:#24292E;">    wrapperPlacement: WrapperPlacement.outside</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// remove/detach whole plugin from element on some action</span></span>
<span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.click-to-remove-plugin&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">detach</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>More API details:</p><ul><li><a href="/light-scrollbar/api/attach/arguments.html">attach arguments</a></li><li><a href="/light-scrollbar/api/attach/returns.html">attach returns</a></li></ul>`,6),p=[o];function t(c,r,E,i,y,h){return a(),n("div",null,p)}const u=s(e,[["render",t]]);export{m as __pageData,u as default};
