name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  cache:
    name: CI cache
    runs-on: ubuntu-latest
    outputs:
      yarn-cache-key: ${{ steps.yarn-cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Remove git auth
        run: git config --unset http.https://github.com/.extraheader
      - name: Generate yarn cache-key
        id: yarn-cache-key
        run: echo "::set-output name=key::${{ runner.os }}-yarn-ci-cache-v3-${{ hashFiles('./yarn.lock') }}-${{ hashFiles('**/yarn.lock') }}"
      - name: Configure Yarn cache
        uses: actions/cache@v3
        with:
          key: ${{ steps.yarn-cache-key.outputs.key }}
          path: |
            .yarn
            node_modules
      - name: Install dependencies
        run: yarn --immutable

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: remove git auth
        run: git config --unset http.https://github.com/.extraheader
      - name: Configure Yarn cache
        uses: actions/cache@v3
        with:
          key: ${{ needs.cache.outputs.yarn-cache-key }}
          path: |
            .yarn
            node_modules
      - name: Install dependencies
        run: yarn --immutable
      - name: Lint
        run: yarn lint.ci

  test:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [cache, lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure Yarn cache
        uses: actions/cache@v3
        with:
          key: ${{ needs.cache.outputs.yarn-cache-key }}
          path: |
            ~/.cache/Cypress
            .yarn
            node_modules

      - name: Install dependencies
        run: yarn --immutable

      - name: build
        run: yarn build

      - name: Run cypress tests
        uses: cypress-io/github-action@53cc3178f59cc99b5519c29c14a182fb98ea4f31
        with:
          install: true
          command: yarn cy.ci

      - name: Upload Cypress artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-report
          path: |
            cypress/report
            cypress/screenshots
            cypress/snapshots
            cypress/logs

  build-depandabot:
    name: build dependabot
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    needs: [cache, lint]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: remove git auth
        run: git config --unset http.https://github.com/.extraheader
      - name: Configure Yarn cache
        uses: actions/cache@v3
        with:
          key: ${{ needs.cache.outputs.yarn-cache-key }}
          path: |
            .yarn
            node_modules
      - name: Install dependencies
        run: yarn --immutable
      - name: build
        run: yarn build

  build-and-release:
    if: ${{ github.actor != 'dependabot[bot]' }}
    name: build and release
    runs-on: ubuntu-latest
    needs: [cache, lint]
    steps:
      - uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"
      - name: Setup git user
        run: |
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: remove git auth
        run: git config --unset http.https://github.com/.extraheader
      - name: Configure Yarn cache
        uses: actions/cache@v3
        with:
          key: ${{ needs.cache.outputs.yarn-cache-key }}
          path: |
            .yarn
            node_modules
      - name: Install dependencies
        run: yarn --immutable
      - name: Authenticate with Registry
        run: |
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: build
        run: yarn build
      - name: release package
        if: ${{ success() && github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: yarn release.ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_REGISTRY: https://registry.npmjs.org/
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
